version: "3.8"

services:
  web:
    container_name: code-name-web
    build: .
    depends_on:
      mongo:
        condition: service_healthy
    ports:
      - "8000:8000"
    networks:
      - code-name
    volumes:
      - .:/home/project:ro
    env_file:
      - .env

  mongo:
    container_name: code-name-db
    image: 'mongo:7.0.5'
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DATABASE_NAME}
    command: mongod --logpath /data/db/mongo.log.txt --logappend
    volumes:
      - data:/data/db
    networks:
      - code-name
    restart: on-failure
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  mongo-express:
    container_name: code-name-express
    image: "mongo-express:1.0.2"
    ports:
      - "8080:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=${MONGO_HOST}
      - ME_CONFIG_MONGODB_PORT=${MONGO_PORT}
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_ROOT_USER}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOT_PASSWORD}
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_EXPRESS_LOGIN}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_EXPRESS_PASSWORD}
    depends_on:
      mongo:
        condition: service_healthy
    restart: always
    networks:
      - code-name

volumes:
  data:

networks:
  code-name:
